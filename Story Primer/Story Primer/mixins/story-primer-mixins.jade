//- Story Primer mixins

mixin adjustableImageRight
    - requireZeroArguments('adjustableImageRight', arguments)
    +image.imageAdjustable.floatRight.bloom-resizable
        block

//- generates a translationGroup with bubble text and optional classes on the internal div
mixin field-bubble-attributesOnChild(bubbleText)
    - requireOneArgument('field-bubble-attributesOnChild', arguments)
    .bloom-translationGroup
        label.bubble=bubbleText
        +editable('en')(attributes=attributes)

//- generates a translationGroup with placeholder text and optional classes on the internal div
mixin field-placeholder-attributesOnChild(placeholderText)
    - requireOneArgument('field-bubble-attributesOnChild', arguments)
    .bloom-translationGroup
        label.placeholder=placeholderText
        +editable('en')(attributes=attributes)

//- generates an image with 'placeHolder.png', standard 'missing' alt text and no copyright/license data
mixin image-bubble(bubbleText)
    - requireOneArgument('image-bubble', arguments)
    +image(attributes=attributes)
        label.bubble=bubbleText
        block

//- generates an image with a specified default src image and embedded copyright/license data
mixin image-specific(src, altText, creator, copyright, license)
    .bloom-imageContainer
        img(attributes, alt=altText, src=src, data-copyright=copyright, data-creator=creator, data-license=license)
        block

//- generates an image with a specified default src image and embedded copyright/license data and bubble text
mixin image-specific-bubble(bubbleText, src, altText, creator, copyright, license)
    .bloom-imageContainer
        label.bubble=bubbleText
        img(attributes, alt=altText, src=src, data-copyright=copyright, data-creator=creator, data-license=license)

//- generates a fixed icon image (no bloom-imageContainer)
mixin fixedIcon(altText, src, creator, copyright, license)
    .icon(attributes)
        img(alt=altText, src=src, data-creator=creator, data-copyright=copyright, data-license=license)

//- generates a fixed icon image with bubble text in a bloom-imageContainer
mixin fixedIcon-bubble(bubbleText, altText, src, creator, copyright, license)
    .bloom-imageContainer.icon
        label.bubble=bubbleText
        img(alt=altText, src=src, data-creator=creator, data-copyright=copyright, data-license=license)

//- generates an alphabet chart matrix 3 wide with variable number of rows
//- this goes under the table element with a special class for this size chart
mixin alphabetChart(rows)
    - requireOneArgument('alphabetChart', arguments)
    +repeat(rows)
        tr
            td
                table.alphabet
                    tr
                        td
                            +field-placeholder-attributesOnChild('Qq')
                        td
                            +image.bloom-resizable.alphabet
            +repeat(2)
                td
                    table.alphabet
                        tr
                            td
                                +field
                            td
                                +image.bloom-resizable.alphabet

//- Revision form; table with 6 cells
mixin form-6cells
    - requireZeroArguments('form-6cells', arguments)
    table.primerTableFixed
        tr
            td.top.left.right
                +field
            td.blank
            td.top.left.right
                +field
            td.blank
            td.top.left.right
                +field
        tr
            td.bottom.left.right
                +field
            td.blank
            td.bottom.left.right
                +field
            td.blank
            td.bottom.left.right
                +field

//- Generates a 6 x 3 table for words broken into syllables
mixin syllableTable
    - requireZeroArguments('syllableTable', arguments)
    table.primerTableFixed
        +repeat(3)
            tr
                td
                    +field.word
                        label.bubble *word broken into syllables
                td.blank
                td
                    +field.word
                td.blank
                td
                    +field.word
            tr
                td.bottom
                    +field.word
                        label.bubble *word
                td.blank
                td.bottom
                    +field.word
                td.blank
                td.bottom
                    +field.word

//- Generate a Glossary for multiple languages 'numberOfLanguages'=columns and
//- several words per page ('numberOfWordsOnPage')
mixin glossary(numberOfLanguages, numberOfWordsOnPage)
    - requireTwoArguments('glossary', arguments)
    +field.title
        label.bubble *Glossary title
    table
        tr
            - var loopCounter = 1
            td
                +field
                    label.bubble *word in language #1

            +repeat(numberOfLanguages - 1)
                - loopCounter++
                td.blank
                td
                    +field
                        label.bubble='*word in language #' + loopCounter
        +repeat(numberOfWordsOnPage - 1)
            tr
                td
                    +field
                +repeat(numberOfLanguages - 1)
                    td.blank
                    td
                        +field)